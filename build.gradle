plugins {
  id "io.spring.dependency-management" version "1.0.6.RELEASE"
  id "org.jetbrains.kotlin.jvm" version "1.3.21"
  id "org.jetbrains.kotlin.kapt" version "1.3.21"
  id "org.jetbrains.kotlin.plugin.allopen" version "1.3.21"
  id "com.github.johnrengelman.shadow" version "4.0.2"
  id 'com.google.cloud.tools.jib' version '1.2.0'
  id "application"
}


version "0.1"
group "com.henrysuryawirawan.demo.cloudrun.helloworld"

repositories {
  mavenCentral()
  jcenter()
}

dependencyManagement {
  imports {
    mavenBom 'io.micronaut:micronaut-bom:1.1.0'
  }
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
  compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
  compile "io.micronaut:micronaut-runtime"
  compile "io.micronaut:micronaut-http-client"
  compile "io.micronaut:micronaut-http-server-netty"
  kapt "io.micronaut:micronaut-inject-java"
  kapt "io.micronaut:micronaut-validation"
  kaptTest "io.micronaut:micronaut-inject-java"
  runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
  runtime "ch.qos.logback:logback-classic:1.2.3"
  testCompile "org.junit.jupiter:junit-jupiter-api"
  testCompile "org.jetbrains.spek:spek-api:1.1.5"
  testRuntime "org.junit.jupiter:junit-jupiter-engine"
  testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"

  // Automatically added with the 'file-watch' feature in the CLi
  developmentOnly "io.micronaut:micronaut-runtime-osx"
  developmentOnly "net.java.dev.jna:jna"
  developmentOnly "io.methvin:directory-watcher"
}

test.classpath += configurations.developmentOnly

mainClassName = "com.henrysuryawirawan.demo.cloudrun.helloworld.Application"

test {
  useJUnitPlatform()
}

allOpen {
  annotation("io.micronaut.aop.Around")
}

compileKotlin {
  kotlinOptions {
    jvmTarget = '1.8'
    //Will retain parameter names for Java reflection
    javaParameters = true
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = '1.8'
    javaParameters = true
  }
}

shadowJar {
  mergeServiceFiles()
}

jib {
  to {
    image = 'gcr.io/hsuryagcp-demo/hello-world'
  }

  container {
    ports = ['8080']
  }
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
